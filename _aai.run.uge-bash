#!/usr/bin/env bash


# Input requirements
[[ -z "$S1" ]] && { echo 'ERROR: $S1 not set' >&2; exit 1; }
[[ -z "$S2" ]] && { echo 'ERROR: $S2 not set' >&2; exit 1; }
[[ -z "$O" ]] && { echo 'ERROR: $O not set' >&2; exit 1; }

# Optional non-default parameters for AAI comparison
XOPTS=''
[[ ! -z "${ALN_FRAC}" ]] && { XOPTS="--identity $ALN_FRAC "; }
[[ ! -z "${PERC_ID}" ]] && { XOPTS+="--identity $PERC_ID "; }

for f in $S1 $S2; do
  if [ ! -f "$f" ]; then
    echo "ERROR: $f nonexistent" >&2
    exit 1
  fi
  if [ ! -s "$f" ]; then
    echo "ERROR: $f empty" >&2
    exit 1
  fi
done

B1=$(basename $S1 .faa)
B2=$(basename $S2 .faa)

if [ -s "$O/AAI--$B1,$B2/aai.$B1,$B2.stats.tab" ]; then
  echo "INFO: found precomputed $O/AAI--$B1,$B2/aai.$B1,$B2.stats.tab" >&2
  AAI=$(grep ',' "$O/AAI--$B1,$B2/aai.$B1,$B2.stats.tab" | cut -f 3 | sed 's/%//1')
elif [ -s "$O/AAI--$B2,$B1/aai.$B2,$B1.stats.tab" ]; then
  echo "INFO: found precomputed $O/AAI--$B2,$B1/aai.$B2,$B1.stats.tab" >&2
  AAI=$(grep ',' "$O/AAI--$B2,$B1/aai.$B2,$B1.stats.tab" | cut -f 3 | sed 's/%//1')
fi
if [[ ! -z $AAI ]]; then
  if [[ "${AAI%.*}" -ge 0 && "${AAI%.*}" -le 100 ]]; then
    echo "INFO: found AAI $AAI for $B1,$B2; skipping the comparison" >&2
    exit 0
  fi
fi

source /etc/profile.d/modules.sh
module load ncbi-blast+/2.6.0
source $HOME/.bashrc
export PATH="$LAB_HOME/.anaconda2/bin:$PATH"
sleep 0.5
source activate bpy2
command -v blastp > /dev/null 2>&1 || { echo 'ERROR: blastp not found' >&2; exit 1; }
AAI.py -1 $S1 -2 $S2 -c $NSLOTS -o "$O/AAI--$B1,$B2" "$XOPTS"
source deactivate
module unload ncbi-blast+/2.6.0
