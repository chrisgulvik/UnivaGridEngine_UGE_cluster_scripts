#!/usr/bin/env bash


verify_file()
{
  # $1=filename; $2=file description
  # $3=size in Bytes (requires c, k, M, or G prefix)
  if [ -f  "${1}" ]; then
    if [ -s  "${1}" ]; then
      if [[ $(find -L "${1}" -type f -size +"${3}") ]]; then
        return
      else
        echo "ERROR: ${2} file ${1} present but < ${3}B" >&2
        false
      fi
    else
      echo "ERROR: ${2} file ${1} present but empty" >&2
      false
    fi
  else
    echo "ERROR: ${2} file ${1} absent" >&2
    false
  fi
}

# Help
if [[ "$1" == "--help" || "$1" == "-h" ]]; then
  echo 'this script is not meant to be executed directly'
  exit 0
fi

# Input requirements
source $HOME/.bashrc
source /etc/profile.d/modules.sh
if [ -z $LAB_HOME ]; then
  echo 'ERROR: $LAB_HOME not set' >&2
  exit 1
fi
if [ -z $O ]; then
  echo 'ERROR: $O variable required)' >&2
  exit 1
fi
if [[ -z $ASM_DIR && -z $ALL_GENOMES_IN_DIR ]]; then
  echo 'ERROR: $ASM_DIR and/or $ALL_GENOMES_IN_DIR variable required' >&2
  exit 1
fi

# Test if >2 sequence files
shopt -s nullglob
[ -n $ASM_DIR ] && ASSEMS+=( $ASM_DIR/*.fna )
[ -n $ALL_GENOMES_IN_DIR ] && ASSEMS+=( $ALL_GENOMES_IN_DIR/*.{fa,fas,fsa,fna,fasta} )
shopt -u nullglob
if [ ${#ASSEMS[@]} -lt 3 ]; then
  echo 'ERROR: at least 3 genomes are required for SNP analysis' >&2
  exit 1
fi
echo "${#ASSEMS[@]} genomes will be processed..."

# Symlink assembly files to .tmp and discard file extensions
mkdir -p $O/parsnp/.tmp
for FILE in ${ASSEMS[@]}; do
  if verify_file "${FILE}" 'assembly' '1k'; then
    BASE="$(basename "${FILE}")"
    NO_EXT="${BASE%.*}"
    ln -sf "${FILE}" "${O}/parsnp/.tmp/${NO_EXT}"
  else
    echo "INFO: ${FILE} excluded from analysis" >&2
  fi
done

# Pick reference genome
if [ -z $REF ]; then
  LARGEST_SIZE=$(ls -SLr $O/parsnp/.tmp/* | tail -n 1 | xargs basename)
  REF="${O}/parsnp/.ref/${LARGEST_SIZE}"
  mkdir $O/parsnp/.ref
  mv -f "${O}/parsnp/.tmp/${LARGEST_SIZE}" "${REF}"
else
  REF="$(readlink -f "${REF}")"
fi

# Run parsnp
module load parsnp/1.5.2 FastTree/2.1.11-SSE-OpenMP
parsnp --use-fasttree -v -c -o "${O}/parsnp" -r "${REF}"\
 -d "${O}/parsnp/.tmp" -p $NSLOTS
module unload parsnp/1.5.2 FastTree/2.1.11-SSE-OpenMP
if ! verify_file "${O}/parsnp/parsnp.ggr" 'gingr' '100k'; then
  echo """ERROR: Parsnp failed.
  Check $O/parsnp/parsnpAligner.log or $O/.log/Parsnp.e*""" >&2
  echo -e "Parsnp failed on $(date)\n${O}/parsnp" | mail \
   -s "Parsnp failed $(basename "${O}/parsnp") [HPC]" \
   "${USER}@cdc.gov"
  exit 1
fi
rm -rf $O/parsnp/.{ref,tmp}
